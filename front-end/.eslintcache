[{"/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/index.js":"1","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/App.js":"2","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/reportWebVitals.js":"3","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/Dashbord.js":"4","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/JoinForm.js":"5","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/SignInForm.js":"6"},{"size":500,"mtime":1609418064563,"results":"7","hashOfConfig":"8"},{"size":835,"mtime":1609679459122,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609418064563,"results":"10","hashOfConfig":"8"},{"size":3174,"mtime":1609678329775,"results":"11","hashOfConfig":"8"},{"size":5354,"mtime":1609677167007,"results":"12","hashOfConfig":"8"},{"size":2716,"mtime":1609676626573,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1knofz6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/index.js",[],["30","31"],"/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/App.js",["32","33","34","35"],"/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/reportWebVitals.js",[],"/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/Dashbord.js",["36","37","38","39"],"import { AppBar, Box, Button, Drawer, makeStyles, Tabs, Toolbar, Typography, Switch, IconButton } from '@material-ui/core';\nimport React, { createContext, useState } from 'react'\nimport CloseIcon from '@material-ui/icons/Close';\nimport App from '../App';\nimport JoinForm from './JoinForm';\nimport SignInForm from './SignInForm';\n\nexport default function Dashbord() {\n    const UserDataContext = createContext(null);\n    const [userData, setUserData] = useState();\n    //need to build the reload function for the data\n\n    const classes = style();\n    const [openConnections, setOpenConnections,] = useState(false);\n    const [CS, setCS,] = useState(false);\n    const ToggleConnections = () => {\n        setCS(!CS);\n    }\n    return (\n        <React.Fragment>\n            <UserDataContext.Provider value={null}>\n                <AppBar color='primary' variant='elevation' className={classes.AppBar}>\n                    <Toolbar className={classes.Toolbar}>\n                        <Typography variant='h1' className={classes.Title}>WorkClock</Typography>\n                        <Box className={classes.Box}>\n                            <Button variant='contained' color='secondary' className={classes.HeaderButton} onClick={() => setOpenConnections(true)}>Join</Button>\n                            <Button variant='outlined' color='secondary' className={classes.HeaderButton}>Log In</Button>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n                <Drawer open={openConnections} onClose={() => setOpenConnections(false)} anchor='right' className={classes.Drawer}>\n                    <Box className={classes.DrawerBox}> \n                        <IconButton className={classes.ExitIcons} onClick={() => setOpenConnections(false)}><CloseIcon/></IconButton>\n                        {CS ? <JoinForm/> : <SignInForm/>}\n                        <Box className={classes.ToggleBox}>\n                            Sign In\n                            <Switch size='medium' checked={CS} onChange={ToggleConnections} color='primary'/>\n                            Join\n                        </Box>\n                    </Box>\n                </Drawer>\n            </UserDataContext.Provider>\n        </React.Fragment>\n    )\n}\n\nconst style = makeStyles((theme) =>({\n    Toolbar : {\n        justifyContent : 'space-between',\n    },\n    Title : {\n        display : 'inline-block',\n        width : 'fit-content',\n    },\n    Box : {\n        display : 'flex',\n        width : 'fit-content',\n    },\n    HeaderButton : {\n        margin : 'auto 5px',\n    },\n    Drawer : {\n        width : '200px',\n    },\n    AppBar : {\n        zIndex : theme.zIndex.drawer +1,\n    },\n    DrawerBox : {\n        margin : '0px',\n        width : '350px',\n        padding : '5px',\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        height : '100%',\n        [theme.breakpoints.down('xs')] : {\n            width: '100vw',\n        },\n    },\n    ToggleBox : {\n        position : 'absolute',\n        bottom : '0px',\n    },\n    ExitIcons : {\n        position : 'absolute',\n        top : '5px',\n        left : '5px'\n    }\n\n}));\n","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/JoinForm.js",["40"],"import { Box, Button, ButtonGroup, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core'\nimport React , {useState} from 'react'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Alert from '@material-ui/lab/Alert';\n\n\nexport default function JoinForm() {\n    const [Firstname, setFirstname] = useState('');\n    const [Lastname, setLastname] = useState('');\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n    const [Gender, setGender] = useState('');\n    const [Phonenumber, setPhonenumber] = useState('');\n    const [Birthday, setBirthday] = useState('');\n    const [ShowPrompt, setShowPrompt] = useState(false);\n    const [AlertMes,setAlertMes] = useState(<MuiAlert elevation={4} severity='info'>hey there</MuiAlert>)\n    const classes = Style();\n\n    const VerifyAndSend = () =>{\n        if(Firstname !== null && Firstname !== '' && Lastname !== null && Lastname !== '' && Email !== null && Email !== '' && Password !== null && Password !== '' && Gender !== null && Gender !== '' && Phonenumber !== null && Phonenumber !== '' && Birthday !== null && Birthday !== '' ){\n            if(true){\n                lunchPrompt('Great','success');\n                console.log({\n                    Firstname : (Firstname.slice(0,1)).toUpperCase() + (Firstname.slice(1,Firstname.length)).toLowerCase(),\n                    Lastname : (Lastname.slice(0,1)).toUpperCase() + (Lastname.slice(1,Lastname.length)).toLowerCase(),\n                    Email : Email.toLowerCase(),\n                    Password : Password.toLowerCase(),\n                    Gender : Gender,\n                    Phonenumber : Phonenumber,\n                    Birthday : Birthday\n                });\n            }\n            else{\n                lunchPrompt('This email address already have account, try to sign in','warning');\n            }\n        }\n        else{\n            lunchPrompt('Some of the the data is not correct','warning');\n        }\n    }\n\n    const lunchPrompt = (mes,ser) =>{\n        setAlertMes(<MuiAlert elevation={4} severity={ser}>{mes}</MuiAlert>);\n        setShowPrompt(true);\n    }\n\n    return (\n        <Box className={classes.root}>\n            <Snackbar open={ShowPrompt} onClose={e=> setShowPrompt(false)} anchorOrigin={{vertical : 'top', horizontal : 'center'}} autoHideDuration={4000}>\n                {AlertMes}\n            </Snackbar>\n            <Typography variant='h3'>Join Us</Typography>\n            <TextField label=\"First name\" variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Firstname == null ? true : false}\n            inputProps = {{pattern : '[A-Za-z]{1,}'}}\n            onChange = {e => setFirstname(e.target.validity.valid ? e.target.value : null)}\n            />\n            <TextField label=\"Last name\" variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Lastname == null ? true : false}\n            inputProps = {{pattern : '[A-Za-z]{1,}'}}\n            onChange = {e => setLastname(e.target.validity.valid ? e.target.value : null)}\n            />\n            <ButtonGroup color='primary' fullWidth className={classes.FiledComponent}>\n                <Button variant={Gender === 'male' ? 'contained' : 'outlined' } onClick={e => setGender(\"male\")}>Male</Button>\n                <Button variant={Gender === 'female' ? 'contained' : 'outlined' } onClick={e => setGender(\"female\")}>Female</Button>\n                <Button variant={Gender === 'other' ? 'contained' : 'outlined' } onClick={e => setGender(\"other\")}>Other</Button>\n            </ButtonGroup>\n            <TextField label=\"Email address\" variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Email == null ? true : false}\n            placeholder='exemple@exmp.com'\n            inputProps = {{pattern : '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,}$'}}\n            onChange = {e => setEmail(e.target.validity.valid ? e.target.value : null)}\n            />\n            <TextField label=\"Password\" type='password' variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Password == null ? true : false}\n            inputProps = {{pattern : '(?=.*[a-z])(?=.*[A-Z]).{8,}'}}\n            onChange = {e => setPassword(e.target.validity.valid ? e.target.value : null)}\n            />\n            <TextField label=\"Phone number\" variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Phonenumber == null ? true : false}\n            inputProps = {{pattern : '[0-9]{10}'}}\n            onChange = {e => setPhonenumber(e.target.validity.valid ? e.target.value : null)}\n            />\n            <TextField label=\"Birthday\" type='date' variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Birthday == null ? true : false}\n            InputLabelProps={{shrink : true}}\n            onChange = {e => setBirthday(e.target.value)}\n            />\n            <Button color='primary' variant='contained' fullWidth onClick={VerifyAndSend}>Join Now</Button>\n        </Box>\n    )\n}\n\nconst Style = makeStyles(theme => ({\n    root : {\n        width : '80%',\n        justifyContent: 'cneter',\n    },\n    FiledComponent : {\n        margin : '5px auto',\n    }\n}));\n","/Users/odedvaalany/Documents/Programing/WorkClock/front-end/src/Components/SignInForm.js",["41","42"],"import { Box, Button, ButtonGroup, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core'\nimport React , {useState} from 'react'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Alert from '@material-ui/lab/Alert';\n\n\nexport default function SignInForm() {\n    const [Email, setEmail] = useState('');\n    const [Password, setPassword] = useState('');\n    const [ShowPrompt, setShowPrompt] = useState(false);\n    const [AlertMes,setAlertMes] = useState(<MuiAlert elevation={4} severity='info'>hey there</MuiAlert>)\n    const classes = Style();\n\n    const VerifyAndSend = () =>{\n        if(Email !== null && Email !== '' && Password !== null && Password !== ''){\n            if(true){\n                lunchPrompt('Great','success');\n                console.log({\n                    Email : Email.toLowerCase(),\n                    Password : Password.toLowerCase(),\n                });\n            }\n            else{\n                lunchPrompt('No any account connect to this email address, try to Join','warning');\n            }\n        }\n        else{\n            lunchPrompt('Some of the the data is not correct','warning');\n        }\n    }\n\n    const lunchPrompt = (mes,ser) =>{\n        setAlertMes(<MuiAlert elevation={4} severity={ser}>{mes}</MuiAlert>);\n        setShowPrompt(true);\n    }\n\n    return (\n        <Box className={classes.root}>\n            <Snackbar open={ShowPrompt} onClose={e=> setShowPrompt(false)} anchorOrigin={{vertical : 'top', horizontal : 'center'}} autoHideDuration={4000}>\n                {AlertMes}\n            </Snackbar>\n            <Typography variant='h3'>Sign In</Typography>\n            <TextField label=\"Email address\" variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Email == null ? true : false}\n            placeholder='exemple@exmp.com'\n            inputProps = {{pattern : '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,}$'}}\n            onChange = {e => setEmail(e.target.validity.valid ? e.target.value : null)}\n            />\n            <TextField label=\"Password\" type='password' variant='outlined' color='primary' fullWidth className={classes.FiledComponent}\n            error={Password == null ? true : false}\n            inputProps = {{pattern : '(?=.*[a-z])(?=.*[A-Z]).{8,}'}}\n            onChange = {e => setPassword(e.target.validity.valid ? e.target.value : null)}\n            />\n            <Button color='primary' variant='contained' fullWidth onClick={VerifyAndSend}>Join Now</Button>\n        </Box>\n    )\n}\n\nconst Style = makeStyles(theme => ({\n    root : {\n        width : '80%',\n        justifyContent: 'cneter',\n    },\n    FiledComponent : {\n        margin : '5px auto',\n    }\n}));\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":3,"column":25,"nodeType":"49","messageId":"50","endLine":3,"endColumn":35},{"ruleId":"47","severity":1,"message":"52","line":4,"column":10,"nodeType":"49","messageId":"50","endLine":4,"endColumn":15},{"ruleId":"47","severity":1,"message":"53","line":5,"column":10,"nodeType":"49","messageId":"50","endLine":5,"endColumn":20},{"ruleId":"47","severity":1,"message":"54","line":1,"column":51,"nodeType":"49","messageId":"50","endLine":1,"endColumn":55},{"ruleId":"47","severity":1,"message":"55","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":11},{"ruleId":"47","severity":1,"message":"56","line":10,"column":12,"nodeType":"49","messageId":"50","endLine":10,"endColumn":20},{"ruleId":"47","severity":1,"message":"57","line":10,"column":22,"nodeType":"49","messageId":"50","endLine":10,"endColumn":33},{"ruleId":"47","severity":1,"message":"58","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"59","line":1,"column":23,"nodeType":"49","messageId":"50","endLine":1,"endColumn":34},{"ruleId":"47","severity":1,"message":"58","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'amber' is defined but never used.","'Typography' is defined but never used.","'Tabs' is defined but never used.","'App' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'Alert' is defined but never used.","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]